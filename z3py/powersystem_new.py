from z3 import *
import numpy as np

s = Solver()
set_option(rational_to_decimal=True)
set_option(precision=4)
attack1 = np.zeros(16, dtype=float)
attack2 = np.zeros(16, dtype=float)
x1_abs = np.zeros(16, dtype=float)
x1 = np.zeros(16, dtype=float)
z1 = np.zeros(16, dtype=float)
x2_abs = np.zeros(16, dtype=float)
x2 = np.zeros(16, dtype=float)
z2 = np.zeros(16, dtype=float)
y1 = np.zeros(16, dtype=float)
attackOnY1 = np.zeros(16, dtype=float)
r1 = np.zeros(16, dtype=float)
y2 = np.zeros(16, dtype=float)
attackOnY2 = np.zeros(16, dtype=float)
r2 = np.zeros(16, dtype=float)
u1 = np.zeros(16, dtype=float)
attackOnU1 = np.zeros(16, dtype=float)
r = np.zeros(16, dtype=float)
y1_0 = Real('y1_0')
r1_0 = Real('r1_0')
rabs1_0 = Real('rabs1_0')
y2_0 = Real('y2_0')
r2_0 = Real('r2_0')
rabs2_0 = Real('rabs2_0')
x1_0 = Real('x1_0')
z1_0 = Real('z1_0')
x1_abs_0 = Real('x1_abs_0')
x2_0 = Real('x2_0')
z2_0 = Real('z2_0')
x2_abs_0 = Real('x2_abs_0')
u1_0 = Real('u1_0')
u1_attacked_0 = Real('u1_attacked_0')
r_0 = Real('r_0')
y1_1 = Real('y1_1')
r1_1 = Real('r1_1')
rabs1_1 = Real('rabs1_1')
y2_1 = Real('y2_1')
r2_1 = Real('r2_1')
rabs2_1 = Real('rabs2_1')
x1_1 = Real('x1_1')
z1_1 = Real('z1_1')
x1_abs_1 = Real('x1_abs_1')
x2_1 = Real('x2_1')
z2_1 = Real('z2_1')
x2_abs_1 = Real('x2_abs_1')
u1_1 = Real('u1_1')
u1_attacked_1 = Real('u1_attacked_1')
r_1 = Real('r_1')
y1_2 = Real('y1_2')
r1_2 = Real('r1_2')
rabs1_2 = Real('rabs1_2')
y2_2 = Real('y2_2')
r2_2 = Real('r2_2')
rabs2_2 = Real('rabs2_2')
x1_2 = Real('x1_2')
z1_2 = Real('z1_2')
x1_abs_2 = Real('x1_abs_2')
x2_2 = Real('x2_2')
z2_2 = Real('z2_2')
x2_abs_2 = Real('x2_abs_2')
u1_2 = Real('u1_2')
u1_attacked_2 = Real('u1_attacked_2')
r_2 = Real('r_2')
y1_3 = Real('y1_3')
r1_3 = Real('r1_3')
rabs1_3 = Real('rabs1_3')
y2_3 = Real('y2_3')
r2_3 = Real('r2_3')
rabs2_3 = Real('rabs2_3')
x1_3 = Real('x1_3')
z1_3 = Real('z1_3')
x1_abs_3 = Real('x1_abs_3')
x2_3 = Real('x2_3')
z2_3 = Real('z2_3')
x2_abs_3 = Real('x2_abs_3')
u1_3 = Real('u1_3')
u1_attacked_3 = Real('u1_attacked_3')
r_3 = Real('r_3')
y1_4 = Real('y1_4')
r1_4 = Real('r1_4')
rabs1_4 = Real('rabs1_4')
y2_4 = Real('y2_4')
r2_4 = Real('r2_4')
rabs2_4 = Real('rabs2_4')
x1_4 = Real('x1_4')
z1_4 = Real('z1_4')
x1_abs_4 = Real('x1_abs_4')
x2_4 = Real('x2_4')
z2_4 = Real('z2_4')
x2_abs_4 = Real('x2_abs_4')
u1_4 = Real('u1_4')
u1_attacked_4 = Real('u1_attacked_4')
r_4 = Real('r_4')
y1_5 = Real('y1_5')
r1_5 = Real('r1_5')
rabs1_5 = Real('rabs1_5')
y2_5 = Real('y2_5')
r2_5 = Real('r2_5')
rabs2_5 = Real('rabs2_5')
x1_5 = Real('x1_5')
z1_5 = Real('z1_5')
x1_abs_5 = Real('x1_abs_5')
x2_5 = Real('x2_5')
z2_5 = Real('z2_5')
x2_abs_5 = Real('x2_abs_5')
u1_5 = Real('u1_5')
u1_attacked_5 = Real('u1_attacked_5')
r_5 = Real('r_5')
y1_6 = Real('y1_6')
r1_6 = Real('r1_6')
rabs1_6 = Real('rabs1_6')
y2_6 = Real('y2_6')
r2_6 = Real('r2_6')
rabs2_6 = Real('rabs2_6')
x1_6 = Real('x1_6')
z1_6 = Real('z1_6')
x1_abs_6 = Real('x1_abs_6')
x2_6 = Real('x2_6')
z2_6 = Real('z2_6')
x2_abs_6 = Real('x2_abs_6')
u1_6 = Real('u1_6')
u1_attacked_6 = Real('u1_attacked_6')
r_6 = Real('r_6')
y1_7 = Real('y1_7')
r1_7 = Real('r1_7')
rabs1_7 = Real('rabs1_7')
y2_7 = Real('y2_7')
r2_7 = Real('r2_7')
rabs2_7 = Real('rabs2_7')
x1_7 = Real('x1_7')
z1_7 = Real('z1_7')
x1_abs_7 = Real('x1_abs_7')
x2_7 = Real('x2_7')
z2_7 = Real('z2_7')
x2_abs_7 = Real('x2_abs_7')
u1_7 = Real('u1_7')
u1_attacked_7 = Real('u1_attacked_7')
r_7 = Real('r_7')
y1_8 = Real('y1_8')
r1_8 = Real('r1_8')
rabs1_8 = Real('rabs1_8')
y2_8 = Real('y2_8')
r2_8 = Real('r2_8')
rabs2_8 = Real('rabs2_8')
x1_8 = Real('x1_8')
z1_8 = Real('z1_8')
x1_abs_8 = Real('x1_abs_8')
x2_8 = Real('x2_8')
z2_8 = Real('z2_8')
x2_abs_8 = Real('x2_abs_8')
u1_8 = Real('u1_8')
u1_attacked_8 = Real('u1_attacked_8')
r_8 = Real('r_8')
y1_9 = Real('y1_9')
r1_9 = Real('r1_9')
rabs1_9 = Real('rabs1_9')
y2_9 = Real('y2_9')
r2_9 = Real('r2_9')
rabs2_9 = Real('rabs2_9')
x1_9 = Real('x1_9')
z1_9 = Real('z1_9')
x1_abs_9 = Real('x1_abs_9')
x2_9 = Real('x2_9')
z2_9 = Real('z2_9')
x2_abs_9 = Real('x2_abs_9')
u1_9 = Real('u1_9')
u1_attacked_9 = Real('u1_attacked_9')
r_9 = Real('r_9')
y1_10 = Real('y1_10')
r1_10 = Real('r1_10')
rabs1_10 = Real('rabs1_10')
y2_10 = Real('y2_10')
r2_10 = Real('r2_10')
rabs2_10 = Real('rabs2_10')
x1_10 = Real('x1_10')
z1_10 = Real('z1_10')
x1_abs_10 = Real('x1_abs_10')
x2_10 = Real('x2_10')
z2_10 = Real('z2_10')
x2_abs_10 = Real('x2_abs_10')
u1_10 = Real('u1_10')
u1_attacked_10 = Real('u1_attacked_10')
r_10 = Real('r_10')
y1_11 = Real('y1_11')
r1_11 = Real('r1_11')
rabs1_11 = Real('rabs1_11')
y2_11 = Real('y2_11')
r2_11 = Real('r2_11')
rabs2_11 = Real('rabs2_11')
x1_11 = Real('x1_11')
z1_11 = Real('z1_11')
x1_abs_11 = Real('x1_abs_11')
x2_11 = Real('x2_11')
z2_11 = Real('z2_11')
x2_abs_11 = Real('x2_abs_11')
u1_11 = Real('u1_11')
u1_attacked_11 = Real('u1_attacked_11')
r_11 = Real('r_11')
y1_12 = Real('y1_12')
r1_12 = Real('r1_12')
rabs1_12 = Real('rabs1_12')
y2_12 = Real('y2_12')
r2_12 = Real('r2_12')
rabs2_12 = Real('rabs2_12')
x1_12 = Real('x1_12')
z1_12 = Real('z1_12')
x1_abs_12 = Real('x1_abs_12')
x2_12 = Real('x2_12')
z2_12 = Real('z2_12')
x2_abs_12 = Real('x2_abs_12')
u1_12 = Real('u1_12')
u1_attacked_12 = Real('u1_attacked_12')
r_12 = Real('r_12')
y1_13 = Real('y1_13')
r1_13 = Real('r1_13')
rabs1_13 = Real('rabs1_13')
y2_13 = Real('y2_13')
r2_13 = Real('r2_13')
rabs2_13 = Real('rabs2_13')
x1_13 = Real('x1_13')
z1_13 = Real('z1_13')
x1_abs_13 = Real('x1_abs_13')
x2_13 = Real('x2_13')
z2_13 = Real('z2_13')
x2_abs_13 = Real('x2_abs_13')
u1_13 = Real('u1_13')
u1_attacked_13 = Real('u1_attacked_13')
r_13 = Real('r_13')
y1_14 = Real('y1_14')
r1_14 = Real('r1_14')
rabs1_14 = Real('rabs1_14')
y2_14 = Real('y2_14')
r2_14 = Real('r2_14')
rabs2_14 = Real('rabs2_14')
x1_14 = Real('x1_14')
z1_14 = Real('z1_14')
x1_abs_14 = Real('x1_abs_14')
x2_14 = Real('x2_14')
z2_14 = Real('z2_14')
x2_abs_14 = Real('x2_abs_14')
u1_14 = Real('u1_14')
u1_attacked_14 = Real('u1_attacked_14')
r_14 = Real('r_14')
y1_15 = Real('y1_15')
r1_15 = Real('r1_15')
rabs1_15 = Real('rabs1_15')
y2_15 = Real('y2_15')
r2_15 = Real('r2_15')
rabs2_15 = Real('rabs2_15')
x1_15 = Real('x1_15')
z1_15 = Real('z1_15')
x1_abs_15 = Real('x1_abs_15')
x2_15 = Real('x2_15')
z2_15 = Real('z2_15')
x2_abs_15 = Real('x2_abs_15')
u1_15 = Real('u1_15')
u1_attacked_15 = Real('u1_attacked_15')
r_15 = Real('r_15')

s.add(u1_0 == 0)
s.add(x1_0 == 0)
s.add(z1_0 == 0)
s.add(x1_abs_0 == 0)
s.add(x2_0 == 0)
s.add(z2_0 == 0)
s.add(x2_abs_0 == 0)
s.add(u1_0 ==  - (0.0556*xhat1_0) - (0.3306*xhat2_0))
u2_attack_0 = Real('u2_attack_0')
s.add(u1_0 ==  - (0.0556*xhat1_0) - (0.3306*xhat2_0))
y2_attack_0 = Real('y2_attack_0')
y2_attack_0 = Real('y2_attack_0')
		s.add(y1_0 == (y_attack_map[1]*y1_attack_0) + (1*x1_0) + (0*x2_0) + (0*u1_0))
		s.add(y2_0 == (y_attack_map[2]*y2_attack_0) + (0*x1_0) + (1*x2_0) + (0*u1_0))
		s.add(r1_0 = y1_0 - (1*z1_0) - (0*z2_0) - (0*u1_attacked_0))
		s.add(r2_0 = y2_0 - (0*z1_0) - (1*z2_0) - (0*u1_attacked_0))
s.add(rabs1_0 == If(r1_0<0,(-1)*r1_0,r1_0))
s.add(rabs2_0 == If(r2_0<0,(-1)*r2_0,r2_0))
s.add(r_0 ==rabs1_0 +rabs2_0 )
s.add(r_0<0.03)
		s.add(z1_1 ==  (0.66*z1_0) + (0.53*z2_0) + (0.34*u1_0) + (0.36*r1[0]) + (0.27*r2[0]) )
		s.add(z2_1 ==  (-0.53*z1_0) + (0.13*z2_0) + (0.53*u1_0) + (-0.31*r1[0]) + (0.08*r2[0]) )
		s.add(x1_1 ==  (0.66*x1_0) + (0.53*x2_0) + (0.34*u1_attacked_0) )
		s.add(x2_1 ==  (-0.53*x1_0) + (0.13*x2_0) + (0.53*u1_attacked_0) )
s.add(u1_1 ==  - (0.0556*xhat1_1) - (0.3306*xhat2_1))
u2_attack_1 = Real('u2_attack_1')
s.add(u1_1 ==  - (0.0556*xhat1_1) - (0.3306*xhat2_1))
y2_attack_1 = Real('y2_attack_1')
y2_attack_1 = Real('y2_attack_1')
		s.add(y1_1 == (y_attack_map[1]*y1_attack_1) + (1*x1_1) + (0*x2_1) + (0*u1_1))
		s.add(y2_1 == (y_attack_map[2]*y2_attack_1) + (0*x1_1) + (1*x2_1) + (0*u1_1))
		s.add(r1_1 = y1_1 - (1*z1_1) - (0*z2_1) - (0*u1_attacked_1))
		s.add(r2_1 = y2_1 - (0*z1_1) - (1*z2_1) - (0*u1_attacked_1))
s.add(rabs1_1 == If(r1_1<0,(-1)*r1_1,r1_1))
s.add(rabs2_1 == If(r2_1<0,(-1)*r2_1,r2_1))
s.add(r_1 ==rabs1_1 +rabs2_1 )
s.add(r_1<0.03)
		s.add(z1_2 ==  (0.66*z1_1) + (0.53*z2_1) + (0.34*u1_1) + (0.36*r1[1]) + (0.27*r2[1]) )
		s.add(z2_2 ==  (-0.53*z1_1) + (0.13*z2_1) + (0.53*u1_1) + (-0.31*r1[1]) + (0.08*r2[1]) )
		s.add(x1_2 ==  (0.66*x1_1) + (0.53*x2_1) + (0.34*u1_attacked_1) )
		s.add(x2_2 ==  (-0.53*x1_1) + (0.13*x2_1) + (0.53*u1_attacked_1) )
s.add(u1_2 ==  - (0.0556*xhat1_2) - (0.3306*xhat2_2))
u2_attack_2 = Real('u2_attack_2')
s.add(u1_2 ==  - (0.0556*xhat1_2) - (0.3306*xhat2_2))
y2_attack_2 = Real('y2_attack_2')
y2_attack_2 = Real('y2_attack_2')
		s.add(y1_2 == (y_attack_map[1]*y1_attack_2) + (1*x1_2) + (0*x2_2) + (0*u1_2))
		s.add(y2_2 == (y_attack_map[2]*y2_attack_2) + (0*x1_2) + (1*x2_2) + (0*u1_2))
		s.add(r1_2 = y1_2 - (1*z1_2) - (0*z2_2) - (0*u1_attacked_2))
		s.add(r2_2 = y2_2 - (0*z1_2) - (1*z2_2) - (0*u1_attacked_2))
s.add(rabs1_2 == If(r1_2<0,(-1)*r1_2,r1_2))
s.add(rabs2_2 == If(r2_2<0,(-1)*r2_2,r2_2))
s.add(r_2 ==rabs1_2 +rabs2_2 )
s.add(r_2<0.03)
		s.add(z1_3 ==  (0.66*z1_2) + (0.53*z2_2) + (0.34*u1_2) + (0.36*r1[2]) + (0.27*r2[2]) )
		s.add(z2_3 ==  (-0.53*z1_2) + (0.13*z2_2) + (0.53*u1_2) + (-0.31*r1[2]) + (0.08*r2[2]) )
		s.add(x1_3 ==  (0.66*x1_2) + (0.53*x2_2) + (0.34*u1_attacked_2) )
		s.add(x2_3 ==  (-0.53*x1_2) + (0.13*x2_2) + (0.53*u1_attacked_2) )
s.add(u1_3 ==  - (0.0556*xhat1_3) - (0.3306*xhat2_3))
u2_attack_3 = Real('u2_attack_3')
s.add(u1_3 ==  - (0.0556*xhat1_3) - (0.3306*xhat2_3))
y2_attack_3 = Real('y2_attack_3')
y2_attack_3 = Real('y2_attack_3')
		s.add(y1_3 == (y_attack_map[1]*y1_attack_3) + (1*x1_3) + (0*x2_3) + (0*u1_3))
		s.add(y2_3 == (y_attack_map[2]*y2_attack_3) + (0*x1_3) + (1*x2_3) + (0*u1_3))
		s.add(r1_3 = y1_3 - (1*z1_3) - (0*z2_3) - (0*u1_attacked_3))
		s.add(r2_3 = y2_3 - (0*z1_3) - (1*z2_3) - (0*u1_attacked_3))
s.add(rabs1_3 == If(r1_3<0,(-1)*r1_3,r1_3))
s.add(rabs2_3 == If(r2_3<0,(-1)*r2_3,r2_3))
s.add(r_3 ==rabs1_3 +rabs2_3 )
s.add(r_3<0.03)
		s.add(z1_4 ==  (0.66*z1_3) + (0.53*z2_3) + (0.34*u1_3) + (0.36*r1[3]) + (0.27*r2[3]) )
		s.add(z2_4 ==  (-0.53*z1_3) + (0.13*z2_3) + (0.53*u1_3) + (-0.31*r1[3]) + (0.08*r2[3]) )
		s.add(x1_4 ==  (0.66*x1_3) + (0.53*x2_3) + (0.34*u1_attacked_3) )
		s.add(x2_4 ==  (-0.53*x1_3) + (0.13*x2_3) + (0.53*u1_attacked_3) )
s.add(u1_4 ==  - (0.0556*xhat1_4) - (0.3306*xhat2_4))
u2_attack_4 = Real('u2_attack_4')
s.add(u1_4 ==  - (0.0556*xhat1_4) - (0.3306*xhat2_4))
y2_attack_4 = Real('y2_attack_4')
y2_attack_4 = Real('y2_attack_4')
		s.add(y1_4 == (y_attack_map[1]*y1_attack_4) + (1*x1_4) + (0*x2_4) + (0*u1_4))
		s.add(y2_4 == (y_attack_map[2]*y2_attack_4) + (0*x1_4) + (1*x2_4) + (0*u1_4))
		s.add(r1_4 = y1_4 - (1*z1_4) - (0*z2_4) - (0*u1_attacked_4))
		s.add(r2_4 = y2_4 - (0*z1_4) - (1*z2_4) - (0*u1_attacked_4))
s.add(rabs1_4 == If(r1_4<0,(-1)*r1_4,r1_4))
s.add(rabs2_4 == If(r2_4<0,(-1)*r2_4,r2_4))
s.add(r_4 ==rabs1_4 +rabs2_4 )
s.add(r_4<0.03)
		s.add(z1_5 ==  (0.66*z1_4) + (0.53*z2_4) + (0.34*u1_4) + (0.36*r1[4]) + (0.27*r2[4]) )
		s.add(z2_5 ==  (-0.53*z1_4) + (0.13*z2_4) + (0.53*u1_4) + (-0.31*r1[4]) + (0.08*r2[4]) )
		s.add(x1_5 ==  (0.66*x1_4) + (0.53*x2_4) + (0.34*u1_attacked_4) )
		s.add(x2_5 ==  (-0.53*x1_4) + (0.13*x2_4) + (0.53*u1_attacked_4) )
s.add(u1_5 ==  - (0.0556*xhat1_5) - (0.3306*xhat2_5))
u2_attack_5 = Real('u2_attack_5')
s.add(u1_5 ==  - (0.0556*xhat1_5) - (0.3306*xhat2_5))
y2_attack_5 = Real('y2_attack_5')
y2_attack_5 = Real('y2_attack_5')
		s.add(y1_5 == (y_attack_map[1]*y1_attack_5) + (1*x1_5) + (0*x2_5) + (0*u1_5))
		s.add(y2_5 == (y_attack_map[2]*y2_attack_5) + (0*x1_5) + (1*x2_5) + (0*u1_5))
		s.add(r1_5 = y1_5 - (1*z1_5) - (0*z2_5) - (0*u1_attacked_5))
		s.add(r2_5 = y2_5 - (0*z1_5) - (1*z2_5) - (0*u1_attacked_5))
s.add(rabs1_5 == If(r1_5<0,(-1)*r1_5,r1_5))
s.add(rabs2_5 == If(r2_5<0,(-1)*r2_5,r2_5))
s.add(r_5 ==rabs1_5 +rabs2_5 )
s.add(r_5<0.03)
		s.add(z1_6 ==  (0.66*z1_5) + (0.53*z2_5) + (0.34*u1_5) + (0.36*r1[5]) + (0.27*r2[5]) )
		s.add(z2_6 ==  (-0.53*z1_5) + (0.13*z2_5) + (0.53*u1_5) + (-0.31*r1[5]) + (0.08*r2[5]) )
		s.add(x1_6 ==  (0.66*x1_5) + (0.53*x2_5) + (0.34*u1_attacked_5) )
		s.add(x2_6 ==  (-0.53*x1_5) + (0.13*x2_5) + (0.53*u1_attacked_5) )
s.add(u1_6 ==  - (0.0556*xhat1_6) - (0.3306*xhat2_6))
s.add(u1_6 ==  - (0.0556*xhat1_6) - (0.3306*xhat2_6))
		s.add(y1_6 ==  + (1*x1_6) + (0*x2_6) + (0*u1_6))
		s.add(y2_6 ==  + (0*x1_6) + (1*x2_6) + (0*u1_6))
		s.add(r1_6 = y1_6 - (1*z1_6) - (0*z2_6) - (0*u1_attacked_6))
		s.add(r2_6 = y2_6 - (0*z1_6) - (1*z2_6) - (0*u1_attacked_6))
s.add(rabs1_6 == If(r1_6<0,(-1)*r1_6,r1_6))
s.add(rabs2_6 == If(r2_6<0,(-1)*r2_6,r2_6))
s.add(r_6 ==rabs1_6 +rabs2_6 )
s.add(r_6<0.03)
		s.add(z1_7 ==  (0.66*z1_6) + (0.53*z2_6) + (0.34*u1_6) + (0.36*r1[6]) + (0.27*r2[6]) )
		s.add(z2_7 ==  (-0.53*z1_6) + (0.13*z2_6) + (0.53*u1_6) + (-0.31*r1[6]) + (0.08*r2[6]) )
		s.add(x1_7 ==  (0.66*x1_6) + (0.53*x2_6) + (0.34*u1_attacked_6) )
		s.add(x2_7 ==  (-0.53*x1_6) + (0.13*x2_6) + (0.53*u1_attacked_6) )
s.add(u1_7 ==  - (0.0556*xhat1_7) - (0.3306*xhat2_7))
s.add(u1_7 ==  - (0.0556*xhat1_7) - (0.3306*xhat2_7))
		s.add(y1_7 ==  + (1*x1_7) + (0*x2_7) + (0*u1_7))
		s.add(y2_7 ==  + (0*x1_7) + (1*x2_7) + (0*u1_7))
		s.add(r1_7 = y1_7 - (1*z1_7) - (0*z2_7) - (0*u1_attacked_7))
		s.add(r2_7 = y2_7 - (0*z1_7) - (1*z2_7) - (0*u1_attacked_7))
s.add(rabs1_7 == If(r1_7<0,(-1)*r1_7,r1_7))
s.add(rabs2_7 == If(r2_7<0,(-1)*r2_7,r2_7))
s.add(r_7 ==rabs1_7 +rabs2_7 )
s.add(r_7<0.03)
		s.add(z1_8 ==  (0.66*z1_7) + (0.53*z2_7) + (0.34*u1_7) + (0.36*r1[7]) + (0.27*r2[7]) )
		s.add(z2_8 ==  (-0.53*z1_7) + (0.13*z2_7) + (0.53*u1_7) + (-0.31*r1[7]) + (0.08*r2[7]) )
		s.add(x1_8 ==  (0.66*x1_7) + (0.53*x2_7) + (0.34*u1_attacked_7) )
		s.add(x2_8 ==  (-0.53*x1_7) + (0.13*x2_7) + (0.53*u1_attacked_7) )
s.add(u1_8 ==  - (0.0556*xhat1_8) - (0.3306*xhat2_8))
s.add(u1_8 ==  - (0.0556*xhat1_8) - (0.3306*xhat2_8))
		s.add(y1_8 ==  + (1*x1_8) + (0*x2_8) + (0*u1_8))
		s.add(y2_8 ==  + (0*x1_8) + (1*x2_8) + (0*u1_8))
		s.add(r1_8 = y1_8 - (1*z1_8) - (0*z2_8) - (0*u1_attacked_8))
		s.add(r2_8 = y2_8 - (0*z1_8) - (1*z2_8) - (0*u1_attacked_8))
s.add(rabs1_8 == If(r1_8<0,(-1)*r1_8,r1_8))
s.add(rabs2_8 == If(r2_8<0,(-1)*r2_8,r2_8))
s.add(r_8 ==rabs1_8 +rabs2_8 )
s.add(r_8<0.03)
		s.add(z1_9 ==  (0.66*z1_8) + (0.53*z2_8) + (0.34*u1_8) + (0.36*r1[8]) + (0.27*r2[8]) )
		s.add(z2_9 ==  (-0.53*z1_8) + (0.13*z2_8) + (0.53*u1_8) + (-0.31*r1[8]) + (0.08*r2[8]) )
		s.add(x1_9 ==  (0.66*x1_8) + (0.53*x2_8) + (0.34*u1_attacked_8) )
		s.add(x2_9 ==  (-0.53*x1_8) + (0.13*x2_8) + (0.53*u1_attacked_8) )
s.add(u1_9 ==  - (0.0556*xhat1_9) - (0.3306*xhat2_9))
s.add(u1_9 ==  - (0.0556*xhat1_9) - (0.3306*xhat2_9))
		s.add(y1_9 ==  + (1*x1_9) + (0*x2_9) + (0*u1_9))
		s.add(y2_9 ==  + (0*x1_9) + (1*x2_9) + (0*u1_9))
		s.add(r1_9 = y1_9 - (1*z1_9) - (0*z2_9) - (0*u1_attacked_9))
		s.add(r2_9 = y2_9 - (0*z1_9) - (1*z2_9) - (0*u1_attacked_9))
s.add(rabs1_9 == If(r1_9<0,(-1)*r1_9,r1_9))
s.add(rabs2_9 == If(r2_9<0,(-1)*r2_9,r2_9))
s.add(r_9 ==rabs1_9 +rabs2_9 )
s.add(r_9<0.03)
		s.add(z1_10 ==  (0.66*z1_9) + (0.53*z2_9) + (0.34*u1_9) + (0.36*r1[9]) + (0.27*r2[9]) )
		s.add(z2_10 ==  (-0.53*z1_9) + (0.13*z2_9) + (0.53*u1_9) + (-0.31*r1[9]) + (0.08*r2[9]) )
		s.add(x1_10 ==  (0.66*x1_9) + (0.53*x2_9) + (0.34*u1_attacked_9) )
		s.add(x2_10 ==  (-0.53*x1_9) + (0.13*x2_9) + (0.53*u1_attacked_9) )
s.add(u1_10 ==  - (0.0556*xhat1_10) - (0.3306*xhat2_10))
s.add(u1_10 ==  - (0.0556*xhat1_10) - (0.3306*xhat2_10))
		s.add(y1_10 ==  + (1*x1_10) + (0*x2_10) + (0*u1_10))
		s.add(y2_10 ==  + (0*x1_10) + (1*x2_10) + (0*u1_10))
		s.add(r1_10 = y1_10 - (1*z1_10) - (0*z2_10) - (0*u1_attacked_10))
		s.add(r2_10 = y2_10 - (0*z1_10) - (1*z2_10) - (0*u1_attacked_10))
s.add(rabs1_10 == If(r1_10<0,(-1)*r1_10,r1_10))
s.add(rabs2_10 == If(r2_10<0,(-1)*r2_10,r2_10))
s.add(r_10 ==rabs1_10 +rabs2_10 )
s.add(r_10<0.03)
		s.add(z1_11 ==  (0.66*z1_10) + (0.53*z2_10) + (0.34*u1_10) + (0.36*r1[10]) + (0.27*r2[10]) )
		s.add(z2_11 ==  (-0.53*z1_10) + (0.13*z2_10) + (0.53*u1_10) + (-0.31*r1[10]) + (0.08*r2[10]) )
		s.add(x1_11 ==  (0.66*x1_10) + (0.53*x2_10) + (0.34*u1_attacked_10) )
		s.add(x2_11 ==  (-0.53*x1_10) + (0.13*x2_10) + (0.53*u1_attacked_10) )
s.add(u1_11 ==  - (0.0556*xhat1_11) - (0.3306*xhat2_11))
s.add(u1_11 ==  - (0.0556*xhat1_11) - (0.3306*xhat2_11))
		s.add(y1_11 ==  + (1*x1_11) + (0*x2_11) + (0*u1_11))
		s.add(y2_11 ==  + (0*x1_11) + (1*x2_11) + (0*u1_11))
		s.add(r1_11 = y1_11 - (1*z1_11) - (0*z2_11) - (0*u1_attacked_11))
		s.add(r2_11 = y2_11 - (0*z1_11) - (1*z2_11) - (0*u1_attacked_11))
s.add(rabs1_11 == If(r1_11<0,(-1)*r1_11,r1_11))
s.add(rabs2_11 == If(r2_11<0,(-1)*r2_11,r2_11))
s.add(r_11 ==rabs1_11 +rabs2_11 )
s.add(r_11<0.03)
		s.add(z1_12 ==  (0.66*z1_11) + (0.53*z2_11) + (0.34*u1_11) + (0.36*r1[11]) + (0.27*r2[11]) )
		s.add(z2_12 ==  (-0.53*z1_11) + (0.13*z2_11) + (0.53*u1_11) + (-0.31*r1[11]) + (0.08*r2[11]) )
		s.add(x1_12 ==  (0.66*x1_11) + (0.53*x2_11) + (0.34*u1_attacked_11) )
		s.add(x2_12 ==  (-0.53*x1_11) + (0.13*x2_11) + (0.53*u1_attacked_11) )
s.add(u1_12 ==  - (0.0556*xhat1_12) - (0.3306*xhat2_12))
s.add(u1_12 ==  - (0.0556*xhat1_12) - (0.3306*xhat2_12))
		s.add(y1_12 ==  + (1*x1_12) + (0*x2_12) + (0*u1_12))
		s.add(y2_12 ==  + (0*x1_12) + (1*x2_12) + (0*u1_12))
		s.add(r1_12 = y1_12 - (1*z1_12) - (0*z2_12) - (0*u1_attacked_12))
		s.add(r2_12 = y2_12 - (0*z1_12) - (1*z2_12) - (0*u1_attacked_12))
s.add(rabs1_12 == If(r1_12<0,(-1)*r1_12,r1_12))
s.add(rabs2_12 == If(r2_12<0,(-1)*r2_12,r2_12))
s.add(r_12 ==rabs1_12 +rabs2_12 )
s.add(r_12<0.03)
		s.add(z1_13 ==  (0.66*z1_12) + (0.53*z2_12) + (0.34*u1_12) + (0.36*r1[12]) + (0.27*r2[12]) )
		s.add(z2_13 ==  (-0.53*z1_12) + (0.13*z2_12) + (0.53*u1_12) + (-0.31*r1[12]) + (0.08*r2[12]) )
		s.add(x1_13 ==  (0.66*x1_12) + (0.53*x2_12) + (0.34*u1_attacked_12) )
		s.add(x2_13 ==  (-0.53*x1_12) + (0.13*x2_12) + (0.53*u1_attacked_12) )
s.add(u1_13 ==  - (0.0556*xhat1_13) - (0.3306*xhat2_13))
s.add(u1_13 ==  - (0.0556*xhat1_13) - (0.3306*xhat2_13))
		s.add(y1_13 ==  + (1*x1_13) + (0*x2_13) + (0*u1_13))
		s.add(y2_13 ==  + (0*x1_13) + (1*x2_13) + (0*u1_13))
		s.add(r1_13 = y1_13 - (1*z1_13) - (0*z2_13) - (0*u1_attacked_13))
		s.add(r2_13 = y2_13 - (0*z1_13) - (1*z2_13) - (0*u1_attacked_13))
s.add(rabs1_13 == If(r1_13<0,(-1)*r1_13,r1_13))
s.add(rabs2_13 == If(r2_13<0,(-1)*r2_13,r2_13))
s.add(r_13 ==rabs1_13 +rabs2_13 )
s.add(r_13<0.03)
		s.add(z1_14 ==  (0.66*z1_13) + (0.53*z2_13) + (0.34*u1_13) + (0.36*r1[13]) + (0.27*r2[13]) )
		s.add(z2_14 ==  (-0.53*z1_13) + (0.13*z2_13) + (0.53*u1_13) + (-0.31*r1[13]) + (0.08*r2[13]) )
		s.add(x1_14 ==  (0.66*x1_13) + (0.53*x2_13) + (0.34*u1_attacked_13) )
		s.add(x2_14 ==  (-0.53*x1_13) + (0.13*x2_13) + (0.53*u1_attacked_13) )
s.add(u1_14 ==  - (0.0556*xhat1_14) - (0.3306*xhat2_14))
s.add(u1_14 ==  - (0.0556*xhat1_14) - (0.3306*xhat2_14))
		s.add(y1_14 ==  + (1*x1_14) + (0*x2_14) + (0*u1_14))
		s.add(y2_14 ==  + (0*x1_14) + (1*x2_14) + (0*u1_14))
		s.add(r1_14 = y1_14 - (1*z1_14) - (0*z2_14) - (0*u1_attacked_14))
		s.add(r2_14 = y2_14 - (0*z1_14) - (1*z2_14) - (0*u1_attacked_14))
s.add(rabs1_14 == If(r1_14<0,(-1)*r1_14,r1_14))
s.add(rabs2_14 == If(r2_14<0,(-1)*r2_14,r2_14))
s.add(r_14 ==rabs1_14 +rabs2_14 )
s.add(r_14<0.03)
		s.add(z1_15 ==  (0.66*z1_14) + (0.53*z2_14) + (0.34*u1_14) + (0.36*r1[14]) + (0.27*r2[14]) )
		s.add(z2_15 ==  (-0.53*z1_14) + (0.13*z2_14) + (0.53*u1_14) + (-0.31*r1[14]) + (0.08*r2[14]) )
		s.add(x1_15 ==  (0.66*x1_14) + (0.53*x2_14) + (0.34*u1_attacked_14) )
		s.add(x2_15 ==  (-0.53*x1_14) + (0.13*x2_14) + (0.53*u1_attacked_14) )

if s.check() == unsat:
	print( "unsat")
	print(s.check())
	isSat = 0        
else:
	print( "sat")
	print(s.check())
	isSat = 1
	m = s.model()
	for d in m.decls():
		print ("%s = %s" % (d.name(), m[d]))
if isSat==1:
	f0 = open("powersystemresult_new.txt", "w+")
	f0.write("1")
	f0.close()
